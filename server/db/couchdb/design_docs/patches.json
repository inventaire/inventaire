{
  "_id": "_design/patches",
  "language": "javascript",
  "views": {
    "byEntityId": {
      "map": "function (doc) { emit(doc._id.split(':')[0], null) }"
    },
    "byUserId": {
      "map": "function (doc) { emit([ doc.user, doc.timestamp ], null) }",
      "reduce": "_count"
    },
    "byDate": {
      "map": "function (doc) { emit(doc.timestamp, null) }"
    },
    "byDay": {
      "map": "function (doc) {\n  const day = new Date(doc.timestamp).toISOString().split('T')[0]\n  emit([ day, doc.user ], null)\n}",
      "reduce": "_count"
    },
    "byRedirectUri": {
      "map": "function (doc) {\n  if (doc.context != null && doc.context.redirectClaims != null) {\n    emit(doc.context.redirectClaims.fromUri, null)\n  }\n}"
    },
    "byClaimValueAndDate": {
      "map": "function emitEntityClaim (property, claimValue, timestamp) {\n  if (typeof claimValue === 'string' && (claimValue.startsWith('wd:') || claimValue.startsWith('inv:'))) {\n    emit([ claimValue, timestamp ], property)\n  }\n}\n\nfunction (doc) {\n  const { timestamp } = doc\n  for (const operation of doc.patch) {\n    if (operation.op === 'add') {\n      const [ , section, property, arrayIndex ] = operation.path.split('/')\n      if (section === 'claims') {\n        if (arrayIndex != null) {\n          emitEntityClaim(property, operation.value, timestamp)\n        } else if (property != null) {\n          for (const subvalue of operation.value) {\n            emitEntityClaim(property, subvalue, timestamp)\n          }\n        }\n      }\n    }\n  }\n}",
      "reduce": "_count"
    }
  }
}
