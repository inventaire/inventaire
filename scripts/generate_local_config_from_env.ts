#!/usr/bin/env tsx

import { writeFile } from 'node:fs/promises'
import { absolutePath } from '#lib/absolute_path'
import { exists } from '#lib/fs'
import { success, warn } from '#lib/utils/logs'

const {
  COUCHDB_USER,
  COUCHDB_PASSWORD,
  PUBLIC_HOSTNAME,
} = process.env

const localConfigPath = absolutePath('root', 'config/local.cjs')

const localConfigExists = await exists(localConfigPath)
if (localConfigExists) {
  warn(`${localConfigPath} already exists: left intact`)
} else {
  const localConfig = `// Generated by scripts/generate_local_config_from_env.ts
// Override settings from ./default.cjs in this file

module.exports = {
  db: {
    username: "${COUCHDB_USER || 'yourCouchdbUsername'}",
    password: "${COUCHDB_PASSWORD || 'yourCouchdbPassword'}",
  },
  publicHostname: "${PUBLIC_HOSTNAME || 'yourDomainName'}",
}`
  await writeFile(localConfigPath, localConfig)
  success(`${localConfigPath} initialized from env variables`)
}
